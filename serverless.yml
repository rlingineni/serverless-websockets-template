service:
  name: serverless-socket-service

custom:
  output:
    file: ./client/data.json
  stage: ${opt:stage, 'dev'}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    APIG_ENDPOINT:
      Fn::Join:
        - ''
        - - Ref: WebsocketsApi
          - .execute-api.
          - Ref: AWS::Region
          - .amazonaws.com/
          - ${self:custom.stage}
    CONNECTIONS_TABLE:
      Ref: ConnectionsTable



functions:
  WebsocketsApi:
    handler: main.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource: arn:aws:execute-api:*:*:*/@connections/*
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:Scan
          - dynamodb:PutItem
          - dynamodb:Query 
          - dynamodb:UpdateItem
        Resource:
          Fn::GetAtt:
            - ConnectionsTable
            - Arn
    events:
      - websocket:
          # Handles new connection requests
          route: $connect
          # Only the '$connect' route supports an authorizer. The other routes
          # are secured via the connection ID and therefore it should be handled
          # like a session ID.
          
      - websocket:
          # Route messages here if '$request.body.action' is 'routeA'.
          # You can adjust which property to use for routing by adjusting
          # 'websocketsApiRouteSelectionExpression'.
          route: routeA
      - websocket:
          # Handles all unrouted messages
          route: $default
      - websocket:
          # Handles disconnect messages
          route: $disconnect



resources:
  Resources:
    ConnectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: WebSocketConnectionsTable
        AttributeDefinitions:
          - AttributeName: PartitionKey
            AttributeType: S
          - AttributeName: RoomName
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: RoomNameIndex
            KeySchema:
              - AttributeName: RoomName
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                - Updates
              ProjectionType: INCLUDE
        KeySchema:
          - AttributeName: PartitionKey
            KeyType: HASH
        SSESpecification:
          SSEEnabled: true
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
